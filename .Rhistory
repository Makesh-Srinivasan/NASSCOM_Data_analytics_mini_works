loan_data <- read.table("loans data.csv",header = TRUE,sep = ",")
loan <- read.csv("loans data.csv")
setwd("~/Desktop/Fifth semester/Data analytics/Lab")
loan <- read.csv("loans data.csv")
rm(list=ls())
loan_data <- read.table("loans data.csv",header = TRUE,sep = ",")
loan <- read.csv("loans data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
iris <- read.csv("Iris.csv")
summary(iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
dirty_iris <- apply(original_iris, 2, function(x) {x[sample( c(1:n), floor(n/10))] <- NA; x} )
dirty_iris[, -1] <- apply (dirty_iris[, -1], 2, function(x) {x[sample( c(1:n), floor(n/10))] <- NA; x} )
dirty_iris[, -1] <- apply (original_iris[, -1], 2, function(x) {x[sample( c(1:n), floor(n/10))] <- NA; x} )
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.35 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.35 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.35 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.3 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
original_iris
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
library(tidyverse)
library(dplyr)
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
original_iris
original_iris %>%
group_by(Species) %>%
dirty_iris <- mutate(SepalLengthCm = dplyr::replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
dirty_iris <- dplyr::mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
dirty_iris
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
original_iris
original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA)) %>%
dirty_iris <- .
original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA)) %>%
dirty_iris <- select()
original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA)) %>%
dirty_iris <- select(Id, SepalLengthCm, SepalWidthCm, PetalLengthCm, PetalWidthCm, Species)
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
# data type change
# add na/nan values randomly
# inconsistent datatype in a column
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# data type change
# add na/nan values randomly
# inconsistent datatype in a column
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
dirty_iris.head()
head(dirty_iris)
# data type change
# inconsistent datatype in a column
# data type change
str(dirty_iris)
# inconsistent datatype in a column
# data type change
str(dirty_iris)
dirty_iris %>%
convert(chr(SepalLengthCm))
# data type change
str(dirty_iris)
dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
# inconsistent datatype in a column
# data type change
dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
# inconsistent datatype in a column
# data type change
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
# inconsistent datatype in a column
dirty_iris %>% do(data.frame(Id = first(.$Id):last(.$Id))) %>%
left_join(dirty_iris, by="Id") %>%
fill(SepalLengthCm, SepalWidthCm, PetalLengthCm, PetalWidthCm, Species)
dirty_iris %>% do(data.frame(Id = first(.$Id):last(.$Id))) %>%
left_join(dirty_iris, by="Id") %>%
fill(SepalLengthCm, SepalWidthCm, PetalLengthCm, PetalWidthCm)
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
duprow
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
str(dirty_iris)
dim(dirty_iris)
unique(dirty_iris$SepalLengthCm)
mean(dirty_iris$SepalLengthCm,na.rm = TRUE)
median(dirty_iris$SepalLengthCm,na.rm = TRUE)
max(dirty_iris$SepalLengthCm,na.rm = TRUE)
min(dirty_iris$SepalLengthCm,na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# import the libraries
library(tidyverse)
library(dplyr)
# import the dataset
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# the dimension is now 175 with 6 columns - an increase from 150 rows due to duplicates
dim(dirty_iris)
unique(dirty_iris$SepalLengthCm)
mean(dirty_iris$SepalLengthCm,na.rm = TRUE)
median(dirty_iris$SepalLengthCm,na.rm = TRUE)
max(dirty_iris$SepalLengthCm,na.rm = TRUE)
min(dirty_iris$SepalLengthCm,na.rm = TRUE)
# Drop the duplicate entries
clean_iris <- unique(dirty_iris)
print(paste("Dimension after removing duplicates = ", dim(clean_iris)))
# Drop the duplicate entries
clean_iris <- unique(dirty_iris)
print(paste("Dimension after removing duplicates = ", dim(clean_iris)[0]))
# Drop the duplicate entries
clean_iris <- unique(dirty_iris)
print(paste("Dimension after removing duplicates = ", dim(clean_iris)[1]))
# Drop the duplicate entries
clean_iris <- unique(dirty_iris)
print(paste("Number of rows after removing duplicates = ", nrow(clean_iris)))
# There are many NA values that needs to be filled
print(paste("Unique = ", unique(dirty_iris$SepalLengthCm)))
# There are many NA values that needs to be filled
unique(dirty_iris$SepalLengthCm)
# Find mean, median, min and max
print(paste("Mean value of the column SepalLengthCm = ", mean(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(dirty_iris$SepalLengthCm,na.rm = TRUE)))
# Drop the duplicate entries
clean_iris <- unique(dirty_iris)
print(paste("Number of rows after removing duplicates = ", nrow(clean_iris)))
str(clean_iris)
# The numbers are in character datatype and to be processed they need to be converted to numeric datatype
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = as.numeric(SepalLengthCm))
str(clean_iris)
# There are many NA values in the column SepalLengthCm that needs to be filled
unique(clean_iris$SepalLengthCm)
# Find mean, median, min and max
print(paste("Mean value of the column SepalLengthCm = ", mean(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(dirty_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(dirty_iris$SepalLengthCm,na.rm = TRUE)))
# Find mean, median, min and max
print(paste("Mean value of the column SepalLengthCm = ", mean(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(clean_iris$SepalLengthCm,na.rm = TRUE)))
# Find mean, median, min and max
print(paste("Mean value of the column SepalLengthCm = ", mean(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(clean_iris$SepalLengthCm,na.rm = TRUE)))
# Used meadian to fill the missing values
clean_iris <- clean_iris %>%
mutate(SepalWidthCm = replace(SepalWidthCm, is.na(SepalWidthCm), median(SepalWidthCm, na.rm = TRUE)))
print(paste("The number of missing values are = ", sum(is.na(Iris1$SepalWidthCm))))
print(paste("The number of missing values are = ", sum(is.na(clean_iris$SepalWidthCm))))
unique(clean_iris$SepalLengthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column SepalWidthCm = ", mean(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Median value of SepalWidthCm = ", median(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalWidthCm = ", max(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalWidthCm = ", min(clean_iris$SepalWidthCm,na.rm = TRUE)))
# Used meadian to fill the missing values
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = replace(SepalLengthCm, is.na(SepalLengthCm), median(SepalLengthCm, na.rm = TRUE)))
print(paste("The number of missing values are = ", sum(is.na(clean_iris$SepalLengthCm))))
unique(clean_iris$SepalLengthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column SepalWidthCm = ", mean(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Median value of SepalWidthCm = ", median(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalWidthCm = ", max(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalWidthCm = ", min(clean_iris$SepalWidthCm,na.rm = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
# import the libraries
library(tidyverse)
library(dplyr)
# import the dataset
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# the dimension is now 175 with 6 columns - an increase from 150 rows due to duplicates
dim(dirty_iris)
clean_iris <- unique(dirty_iris)
print(paste("Number of rows after removing duplicates = ", nrow(clean_iris)))
print("Before changing the datatype")
str(clean_iris)
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = as.numeric(SepalLengthCm))
print("After changing the datatype")
str(clean_iris)
unique(clean_iris$SepalLengthCm)
print(paste("Mean value of the column SepalLengthCm = ", mean(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(clean_iris$SepalLengthCm,na.rm = TRUE)))
# Used meadian to fill the missing values
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = replace(SepalLengthCm, is.na(SepalLengthCm), median(SepalLengthCm, na.rm = TRUE)))
print(paste("The number of missing values are = ", sum(is.na(clean_iris$SepalLengthCm))))
unique(clean_iris$SepalLengthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column SepalWidthCm = ", mean(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Median value of SepalWidthCm = ", median(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalWidthCm = ", max(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalWidthCm = ", min(clean_iris$SepalWidthCm,na.rm = TRUE)))
# used mean value to replace the missing values
clean_iris <- clean_iris %>%
mutate(SepalWidthCm = replace(SepalWidthCm, is.na(SepalWidthCm), median(SepalWidthCm, na.rm = TRUE)))
unique(clean_iris$SepalWidthCm)
knitr::opts_chunk$set(echo = TRUE)
# import the libraries
library(tidyverse)
library(dplyr)
# import the dataset
original_iris <- read.csv("Iris.csv")
summary(original_iris)
print(paste("Number of missing values = ", sum(is.na(original_iris))))
print(paste("Number of duplicate entries = ", sum(table(original_iris$Id)-1)))
# inject NA values
dirty_iris <- original_iris %>%
group_by(Species) %>%
mutate(SepalLengthCm = replace(SepalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(SepalWidthCm = replace(SepalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalLengthCm = replace(PetalLengthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))%>%
mutate(PetalWidthCm = replace(PetalWidthCm, sample(row_number(),size = ceiling(0.2 * n()), replace = TRUE), NA))
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# Datatype change from num to chr for column SepalLengthCm
dirty_iris <- dirty_iris %>%
mutate(SepalLengthCm = as.character(SepalLengthCm))
str(dirty_iris)
duprow = dirty_iris[1,]
for(i in 1:25){
dirty_iris = rbind(dirty_iris, duprow)
}
print(paste("Number of missing values = ", sum(is.na(dirty_iris))))
print(paste("Number of duplicate entries = ", sum(table(dirty_iris$Id)-1)))
# the dimension is now 175 with 6 columns - an increase from 150 rows due to duplicates
dim(dirty_iris)
clean_iris <- unique(dirty_iris)
print(paste("Number of rows after removing duplicates = ", nrow(clean_iris)))
print("Before changing the datatype")
str(clean_iris)
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = as.numeric(SepalLengthCm))
print("After changing the datatype")
str(clean_iris)
unique(clean_iris$SepalLengthCm)
print(paste("Mean value of the column SepalLengthCm = ", mean(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Median value of SepalLengthCm = ", median(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalLengthCm = ", max(clean_iris$SepalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalLengthCm = ", min(clean_iris$SepalLengthCm,na.rm = TRUE)))
# Used meadian to fill the missing values
clean_iris <- clean_iris %>%
mutate(SepalLengthCm = replace(SepalLengthCm, is.na(SepalLengthCm), median(SepalLengthCm, na.rm = TRUE)))
print(paste("The number of missing values are = ", sum(is.na(clean_iris$SepalLengthCm))))
unique(clean_iris$SepalWidthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column SepalWidthCm = ", mean(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Median value of SepalWidthCm = ", median(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Maximum value of SepalWidthCm = ", max(clean_iris$SepalWidthCm,na.rm = TRUE)))
print(paste("Minimum value of SepalWidthCm = ", min(clean_iris$SepalWidthCm,na.rm = TRUE)))
# used mean value to replace the missing values
clean_iris <- clean_iris %>%
mutate(SepalWidthCm = replace(SepalWidthCm, is.na(SepalWidthCm), median(SepalWidthCm, na.rm = TRUE)))
print(paste("The number of missing values (column SepalWidthCm) are = ", sum(is.na(clean_iris$SepalWidthCm))))
unique(clean_iris$PetalLengthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column PetalLengthCm = ", mean(clean_iris$PetalLengthCm,na.rm = TRUE)))
print(paste("Median value of PetalLengthCm = ", median(clean_iris$PetalLengthCm,na.rm = TRUE)))
print(paste("Maximum value of PetalLengthCm = ", max(clean_iris$PetalLengthCm,na.rm = TRUE)))
print(paste("Minimum value of PetalLengthCm = ", min(clean_iris$PetalLengthCm,na.rm = TRUE)))
# used mean value to replace the missing values
clean_iris <- clean_iris %>%
mutate(PetalLengthCm = replace(PetalLengthCm, is.na(PetalLengthCm), mean(PetalLengthCm, na.rm = TRUE)))
print(paste("The number of missing values (column PetalLengthCm) are = ", sum(is.na(clean_iris$PetalLengthCm))))
unique(clean_iris$PetalWidthCm)
#### Find mean, median, min and max
print(paste("Mean value of the column PetalWidthCm = ", mean(clean_iris$PetalWidthCm,na.rm = TRUE)))
print(paste("Median value of PetalWidthCm = ", median(clean_iris$PetalWidthCm,na.rm = TRUE)))
print(paste("Maximum value of PetalWidthCm = ", max(clean_iris$PetalWidthCm,na.rm = TRUE)))
print(paste("Minimum value of PetalWidthCm = ", min(clean_iris$PetalWidthCm,na.rm = TRUE)))
# used mean value to replace the missing values
clean_iris <- clean_iris %>%
mutate(PetalWidthCm = replace(PetalWidthCm, is.na(PetalWidthCm), mean(PetalWidthCm, na.rm = TRUE)))
print(paste("The number of missing values (column PetalWidthCm) are = ", sum(is.na(clean_iris$PetalWidthCm))))
any(is.na(Iris1))
any(is.na(clean_iris))
summary(clean_iris)
print("The different species present are: ")
clean_iris%>%
group_by(Species) %>%
select(Species)
print("The different species present are: ")
clean_iris%>%
group_by(Species) %>%
unique(select(Species))
print("The different species present are: ")
clean_iris%>%
group_by(Species) %>%
select(Species)
print("The different species present are: ")
df <- clean_iris%>%
group_by(Species) %>%
select(Species)
df
print("The different species present are: ")
df <- clean_iris%>%
group_by(Species) %>%
select(Species)
names(df)
print("The different species present are: ")
df <- clean_iris%>%
group_by(Species) %>%
select(Species)
unique(df)
